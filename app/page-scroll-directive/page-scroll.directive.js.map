{"version":3,"file":"page-scroll.directive.js","sourceRoot":"","sources":["page-scroll.directive.ts"],"names":[],"mappings":"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","sourcesContent":["import {Directive, ElementRef, Input, Output, EventEmitter, HostListener, OnDestroy} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Subscription} from 'rxjs/Subscription';\nimport {PageScrollConfig, IEasingFunction} from './page-scroll-config';\n\n@Directive({\n    selector: '[pageScroll]'\n})\nexport class PageScroll implements OnDestroy {\n    \n    @Input()\n    public routerLink:any;\n\n    @Input()\n    public href:string;\n\n    @Input()\n    public pageScrollOffset:number = null;\n\n    @Input()\n    public pageScrollDuration:number = null;\n\n    @Input()\n    public pageScrollEasing:IEasingFunction = null;\n\n    @Output()\n    pageScrollFinish:EventEmitter<any> = new EventEmitter();\n\n    private document:Document;\n    private body:HTMLBodyElement;\n    private listener:EventListenerOrEventListenerObject = (event:Event):void => {\n        // Stop the scroll animation if the user interferes with it\n        if (event.type !== 'keyup' || PageScroll.interfereKeys.indexOf((<KeyboardEvent>event).keyCode) >= 0) {\n            PageScroll.stopTimers();\n        }\n    };\n\n    private static timers:any[] = [];\n    private static interfereEvents:string[] = ['mousedown', 'wheel', 'DOMMouseScroll', 'mousewheel', 'keyup', 'touchmove'];\n    private static interfereKeys:number[] = [33, 34, 35, 36, 38, 40];\n\n    constructor(private el:ElementRef, private router:Router) {\n        this.document = el.nativeElement.ownerDocument;\n        this.body = el.nativeElement.ownerDocument.body;\n        PageScroll.interfereEvents.forEach((event:string) => this.body.addEventListener(event, this.listener));\n    }\n\n    ngOnDestroy():any {\n        PageScroll.interfereEvents.forEach((event:string) => this.body.removeEventListener(event, this.listener));\n        return undefined;\n    }\n\n    @HostListener('click', ['$event'])\n    private handleClick(event:Event):boolean {\n        if (this.routerLink) {\n            // We need to navigate their first.\n            // Navigation is handled by the routerLink directive\n            // so we only need to listen for route change\n            // Note: the change event is also emitted when navigating to the current route again\n            let subscription:Subscription = <Subscription>this.router.changes.subscribe(() => {\n                subscription.unsubscribe();\n                this.scrollView(this.href);\n            });\n        } else {\n            this.scrollView(this.href);\n        }\n        return false; // to preventDefault()\n    }\n\n    private scrollView(anchor:string):void {\n        let anchorTarget:HTMLElement = this.document.getElementById(anchor.substr(1));\n\n        if (anchorTarget !== null) {\n            let targetScrollTop:number = anchorTarget.offsetTop;\n            let distanceToScroll:number = targetScrollTop - this.body.scrollTop;\n\n            if (distanceToScroll !== 0) {\n                PageScroll.stopTimers();\n\n                let startTime:number = new Date().getTime();\n\n                let intervalConf:any = {\n                    startScrollTop: this.body.scrollTop,\n                    targetScrollTop: distanceToScroll -\n                    (this.pageScrollOffset === null ? PageScrollConfig.defaultScrollOffset : this.pageScrollOffset),\n                    startTime: startTime,\n                    easing: this.pageScrollEasing === null ? PageScrollConfig.defaultEasingFunction : this.pageScrollEasing\n                };\n                intervalConf.duration = this.pageScrollDuration === null ? PageScrollConfig.defaultDuration : this.pageScrollDuration;\n                intervalConf.endTime = intervalConf.startTime + intervalConf.duration;\n\n                let timer:any = setInterval((intervalConf:any) => {\n                    let currentTime:number = new Date().getTime();\n                    this.body.scrollTop = intervalConf.easing(\n                        currentTime - intervalConf.startTime,\n                        intervalConf.startScrollTop,\n                        intervalConf.targetScrollTop,\n                        intervalConf.duration);\n\n                    if (intervalConf.endTime <= currentTime) {\n                        PageScroll.stopTimer(timer);\n                        this.pageScrollFinish.emit(null);\n                    }\n                }, PageScrollConfig._interval, intervalConf);\n                PageScroll.timers.push(timer);\n            }\n        }\n    }\n\n    private static stopTimers():boolean {\n        if (PageScroll.timers.length > 0) {\n            PageScroll.timers.forEach((timer:any, index:number) => {\n                clearInterval(timer);\n                PageScroll.timers.splice(index, 1);\n            });\n            return true;\n        }\n        return false;\n    }\n\n    private static stopTimer(timer:any):boolean {\n        clearInterval(timer);\n        let index:number = PageScroll.timers.indexOf(timer);\n        if (index >= 0) {\n            PageScroll.timers.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n}"]}