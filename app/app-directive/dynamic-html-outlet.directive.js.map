{"version":3,"file":"dynamic-html-outlet.directive.js","sourceRoot":"","sources":["dynamic-html-outlet.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAUO,eAEP,CAAC,CAFqB;AAEtB,gCAAuC,QAA2B,EAAE,QAA2B;IAC3F,IAAM,QAAQ,GAAG;QAAA;QAAwB,CAAC;QAAD,uBAAC;IAAD,CAAC,AAAzB,GAAyB,CAAC;IAC3C,IAAM,YAAY,GAAG,gBAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IACnD,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;AACnD,CAAC;AAJe,8BAAsB,yBAIrC,CAAA;AAKD;IAGE,oCAAoB,KAAuB,EAAU,QAA2B;QAA5D,UAAK,GAAL,KAAK,CAAkB;QAAU,aAAQ,GAAR,QAAQ,CAAmB;IAChF,CAAC;IAED,gDAAW,GAAX;QAAA,iBAYC;QAXC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;YAAC,MAAM,CAAC;QAEtB,IAAM,QAAQ,GAAG,IAAI,wBAAiB,CAAC;YACnC,QAAQ,EAAE,cAAc;YACxB,QAAQ,EAAE,IAAI,CAAC,GAAG;SACrB,CAAC,CAAC;QACH,sBAAsB,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC;aAC5C,IAAI,CAAC,UAAA,OAAO;YACX,IAAM,QAAQ,GAAG,yBAAkB,CAAC,qBAAqB,CAAC,EAAE,EAAE,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YACzF,KAAI,CAAC,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAjBD;QAAC,YAAK,EAAE;;2DAAA;IAJV;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;SAClC,CAAC;;kCAAA;IAoBF,iCAAC;AAAD,CAAC,AAnBD,IAmBC;AAnBY,kCAA0B,6BAmBtC,CAAA;AAED,eAAe;AACf,0BAA0B;AAC1B,kBAAkB;AAClB,mEAAmE;AACnE,SAAS;AACT,sCAAsC;AACtC,KAAK;AACL,qBAAqB;AACrB,oBAAoB;AACpB,sDAAsD;AACtD,WAAW;AACX,IAAI","sourcesContent":["import {\n  Component,\n  Directive,\n  ComponentFactory,\n  ComponentMetadata,\n  ComponentResolver,\n  Input,\n  ReflectiveInjector,\n  ViewContainerRef,\n  \n} from '@angular/core'\n\nexport function createComponentFactory(resolver: ComponentResolver, metadata: ComponentMetadata): Promise<ComponentFactory<any>> {\n    const cmpClass = class DynamicComponent {};\n    const decoratedCmp = Component(metadata)(cmpClass);\n    return resolver.resolveComponent(decoratedCmp);\n}\n\n@Directive({\n    selector: 'dynamic-html-outlet',\n})\nexport class DynamicHtmlOutletDirective {\n  @Input() src: string;\n  \n  constructor(private vcRef: ViewContainerRef, private resolver: ComponentResolver) {\n  }\n  \n  ngOnChanges() {\n    if (!this.src) return;\n    \n    const metadata = new ComponentMetadata({\n        selector: 'dynamic-html',\n        template: this.src,\n    });\n    createComponentFactory(this.resolver, metadata)\n      .then(factory => {\n        const injector = ReflectiveInjector.fromResolvedProviders([], this.vcRef.parentInjector);\n        this.vcRef.createComponent(factory, 0, injector, []);\n      });\n  }\n}\n\n// @Component({\n//     selector: 'my-app',\n//     template: `\n//         <dynamic-html-outlet [src]=\"html\"></dynamic-html-outlet>\n//     `,\n//     directives: [DynamicHTMLOutlet]\n// })\n// export class App {\n//     html = `<div>\n//     <p style=\"color:red;\">Dynamic HTML Fragment</p>\n// </div>`;\n// }"]}