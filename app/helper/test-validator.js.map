{"version":3,"file":"test-validator.js","sourceRoot":"","sources":["test-validator.ts"],"names":[],"mappings":";AACA,kCAAiC,qBAAqB,CAAC,CAAA;AACvD,sCAAqC,yBAAyB,CAAC,CAAA;AAC/D,iCAAgC,oBAAoB,CAAC,CAAA;AAErD;IACI;IACA,CAAC;IACD,kCAAU,GAAV,UAAW,OAAa;QACpB,IAAI,UAAU,GAA8B,EAAE,CAAC;QAC/C,UAAU,CAAC,UAAU,CAAC,GAAC,IAAI,oCAAgB,EAAE,CAAC;QAC9C,UAAU,CAAC,cAAc,CAAC,GAAC,IAAI,4CAAoB,EAAE,CAAC;QACtD,UAAU,CAAC,QAAQ,CAAC,GAAC,IAAI,kCAAe,EAAE,CAAC;QAE3C,OAAO,CAAC,OAAO,CAAC,UAAA,GAAG;YACf,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAI,GAAG,UAAI,UAAU,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,UAAU,UAAI,IAAM,CAAC,CAAC;gBAC3F,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IACL,oBAAC;AAAD,CAAC,AAhBD,IAgBC;AAhBY,qBAAa,gBAgBzB,CAAA","sourcesContent":["import { StringValidator } from \"./validation\";\nimport { ZipcodeValidator } from \"./zipcode-validator\";\nimport { LettersonlyValidator } from \"./lettersonly-validator\";\nimport { MobileValidator } from \"./mobile-validator\";\n\nexport class TestValidator {\n    constructor() {\n    }\n    checkArray(strings:any[]){\n        let validators:{[s:string]:StringValidator}={};\n        validators[\"Zip code\"]=new ZipcodeValidator();\n        validators[\"Letters only\"]=new LettersonlyValidator();\n        validators[\"Mobile\"]=new MobileValidator();\n        \n        strings.forEach(str => {\n            for (var name in validators) {\n                console.log(`${str} ${validators[name].isAcceptable(str) ? \"match\" : \"no match\"} ${name}`);\n                console.log(\"ck\");\n            }\n        });\n    }\n}\n"]}