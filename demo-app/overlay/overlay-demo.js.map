{"version":3,"file":"overlay-demo.js","sourceRoot":"","sources":["overlay-demo.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAGO,eAAe,CAAC,CAAA;AACvB,wBAEqB,4BAA4B,CAAC,CAAA;AAClD,uBAAsC,0BAA0B,CAAC,CAAA;AACjE,kCAAsC,qCAAqC,CAAC,CAAA;AAW5E;IAKE,qBAAmB,OAAgB,EAAS,gBAAkC;QAA3D,YAAO,GAAP,OAAO,CAAS;QAAS,qBAAgB,GAAhB,gBAAgB,CAAkB;QAJ9E,iBAAY,GAAW,CAAC,CAAC;IAIyD,CAAC;IAEnF,qCAAe,GAAf;QAAA,iBAaC;QAZC,IAAI,MAAM,GAAG,IAAI,sBAAY,EAAE,CAAC;QAEhC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aAC5C,MAAM,EAAE;aACR,IAAI,CAAI,IAAI,CAAC,YAAY,OAAI,CAAC;aAC9B,GAAG,CAAI,IAAI,CAAC,YAAY,OAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YAClC,GAAG,CAAC,MAAM,CAAC,IAAI,wBAAe,CAAC,UAAU,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAgB,GAAhB;QAAA,iBAaC;QAZC,IAAI,MAAM,GAAG,IAAI,sBAAY,EAAE,CAAC;QAEhC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;aAC5C,MAAM,EAAE;aACR,kBAAkB,EAAE;aACpB,GAAG,CAAI,IAAI,CAAC,YAAY,OAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;QAExB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;YAClC,GAAG,CAAC,MAAM,CAAC,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IAhCD;QAAC,mBAAY,CAAC,2CAAuB,CAAC;;wDAAA;IAXxC;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,WAAW,EAAE,oCAAoC;YACjD,SAAS,EAAE,CAAC,mCAAmC,CAAC;YAChD,UAAU,EAAE,CAAC,2CAAuB,CAAC;YACrC,SAAS,EAAE,CAAC,iBAAO,CAAC;YACpB,aAAa,EAAE,wBAAiB,CAAC,IAAI;SACtC,CAAC;;mBAAA;IAqCF,kBAAC;AAAD,CAAC,AApCD,IAoCC;AApCY,mBAAW,cAoCvB,CAAA;AAED,+CAA+C;AAK/C;IAAA;QACE,UAAK,GAAW,IAAI,CAAC;IACvB,CAAC;IAND;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,QAAQ,EAAE,6CAA6C;SACxD,CAAC;;kBAAA;IAGF,iBAAC;AAAD,CAAC,AAFD,IAEC","sourcesContent":["import {\n    Component, ViewChildren, QueryList, ViewEncapsulation,\n    ViewContainerRef\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayState} from '../../core/overlay/overlay';\nimport {ComponentPortal, Portal} from '../../core/portal/portal';\nimport {TemplatePortalDirective} from '../../core/portal/portal-directives';\n\n\n@Component({\n  selector: 'overlay-demo',\n  templateUrl: 'demo-app/overlay/overlay-demo.html',\n  styleUrls: ['demo-app/overlay/overlay-demo.css'],\n  directives: [TemplatePortalDirective],\n  providers: [Overlay],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class OverlayDemo {\n  nextPosition: number = 0;\n\n  @ViewChildren(TemplatePortalDirective) templatePortals: QueryList<Portal<any>>;\n\n  constructor(public overlay: Overlay, public viewContainerRef: ViewContainerRef) { }\n\n  openRotiniPanel() {\n    let config = new OverlayState();\n\n    config.positionStrategy = this.overlay.position()\n        .global()\n        .left(`${this.nextPosition}px`)\n        .top(`${this.nextPosition}px`);\n\n    this.nextPosition += 30;\n\n    this.overlay.create(config).then(ref => {\n      ref.attach(new ComponentPortal(PastaPanel, this.viewContainerRef));\n    });\n  }\n\n  openFusilliPanel() {\n    let config = new OverlayState();\n\n    config.positionStrategy = this.overlay.position()\n        .global()\n        .centerHorizontally()\n        .top(`${this.nextPosition}px`);\n\n    this.nextPosition += 30;\n\n    this.overlay.create(config).then(ref => {\n      ref.attach(this.templatePortals.first);\n    });\n  }\n}\n\n/** Simple component to load into an overlay */\n@Component({\n  selector: 'pasta-panel',\n  template: '<p class=\"demo-rotini\">Rotini {{value}}</p>'\n})\nclass PastaPanel {\n  value: number = 9000;\n}\n"]}